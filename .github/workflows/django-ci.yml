# A human-readable name for your workflow, which will be displayed on GitHub
name: Django Backend Tests

# --- Triggers ---
on:
  push:
    branches: [ main, fix/known-issues-cleanup ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# --- Jobs ---
jobs:
  test:
    runs-on: ubuntu-latest

    # --- THIS IS THE CRITICAL FIX ---
    # This starts a PostgreSQL container for your tests to connect to.
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: nxtturn_test_db
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Loopline/requirements.txt

      - name: Run Pytest
        # These env variables MUST match the service credentials above
        env:
          SECRET_KEY: 'dummy-secret-key-for-testing'
          DB_NAME: nxtturn_test_db
          DB_USER: testuser
          DB_PASSWORD: testpassword
          DB_HOST: localhost
          DB_PORT: 5432
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: python -m pytest Loopline/